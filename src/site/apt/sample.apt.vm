#*
 * Copyright 2009-2010 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
   ------
   Sample Application
   ------
~~
~~ Copyright 2006 the original author or authors.
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~      http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~
Sample Application

    This page describes how to download and run the sample application. Prerequisites are Maven 2 and Java 5 JDK.
    
  [[1]] Checkout the source code "svn co https://java-crumbs.svn.sourceforge.net/svnroot/java-crumbs/spring-ws-test-sample/tags/spring-ws-test-sample-${currentVersion} spring-ws-test-sample"

  [[2]] Go to "spring-ws-test-sample" directory.

  [[3]] Execute "mvn test". Maven will do its magic and at the end the tests will be executed.
  
  [[4]] Execute "mvn eclipse:eclipse" to generate Eclipse project.
  
  [[5]] Execute "mvn jetty:run" to start the project in Jetty server. You can use "AirlineAggregator-soapui-project.xml" SoapUI project. Please keep
  in mind that only GetFlight service is implemented and since it is trying to connect to non-existing services, empty result will be returned.
     