~~
~~ Copyright 2009-2010 the original author or authors.
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~      http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~
   ------
   Introduction
   ------
~~
~~ Copyright 2006 the original author or authors.
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~      http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.
~~
Simplify your WS tests
  
  Do you need to test you web-service client layer? Do you wan to run your end-to-end test without having to set-up a mock server? 
  Do you want to simplify your server side tests?  
  Spring WS Test is here to help you.
  
    
  Spring WS Test project simplifies functional testing of {{{http://static.springsource.org/spring-ws/sites/1.5/}Spring WS}} client applications. 
  It allows you to write functional tests that can run in one JVM, that can use JUnit or TestNG, that are simple to set-up and configure. Yet this
  type of tests is quite powerful and you can test most of your configuration and component integration.    

  This project can be used mainly in the following scenarios:
  
  * Tests of Spring configuration. Unit tests are nice and useful but we also need to test the configuration. Spring WS Test gives you the possibility to test most of the configuration without having to depend on any external systems running.
 
  * Test Driven Development. You can define an application in terms of requests sent and reactions on responses received. Spring WS Test makes it much easier.
 
  * ...
    
    
  
  <<If you are looking for server side testing, please go {{{server-test-support.html}here}}.>> Following sections are about WS client tests.
    
* How to start?

  [[1]] Import Maven dependency
  
---
<dependency>
	<groupId>net.javacrumbs</groupId>
	<artifactId>spring-ws-test</artifactId>
	<version>${currentVersion}</version>
</dependency>
---

  [[2]] Write your test
  
---
@RunWith(SpringJUnit4ClassRunner.class)
//load your standard Spring configuration 
@ContextConfiguration(locations={"classpath:spring/applicationContext.xml"})
//Add the listener
@TestExecutionListeners({WsMockControlTestExecutionListener.class, DependencyInjectionTestExecutionListener.class})
public class AirlineWsClient4Test {

	//inject the class under the test
	@Autowired
	private AirlineWsClient client;
	
	//inject mock control
	@Autowired
	private WsMockControl mockControl;
	
	@Test
	public void testCall()
	{
		
		//teach mock what to do 
		mockControl.expectRequest("expected-request.xml")
					.returnResponse("response-to-be-returned.xml");

		long ticketId = client.bookFlight(input,params,here);
		assertEquals(123456L, ticketId);
		
		//verify all the calls
		mockControl.verify();
	}
	
}

---
  
  [[3]] And you are done. The library will verify that your Spring configuration is correct, that the request generated by 
  your code corresponds to what you expect and the framework will return the response specified in the "response-to-be-returned.xml" file.
  Everything in memory, without any HTTP connection so it's reasonably fast. 
  
   If you need more functional test style configuration, please read {{{func-test.html}functional test}} reference. 
     
  
  <<Note: I really want to hear your feedback. The project is in very early stage so you have unique opportunity to drive its development. 
   If you find a bug, please report it in project {{{http://mvnindex.org/jira/browse/SWST}JIRA}}. If you encounter any issue, do not hesitate and contact me on lukas at krecan dot net.
   If you like it, please let me now on my {{{http://blog.krecan.net/2009/09/02/spring-ws-test/}blog}}>>
 